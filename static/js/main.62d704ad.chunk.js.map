{"version":3,"sources":["Components/Navigation/NavSearch.js","Components/Navigation/NavDefaultSearchesCity.js","Components/Navigation/NavDefaultSearches.js","Components/Navigation/SidebarNav.js","Components/Navigation/HamburgerMenu.js","Components/Navigation/Navigation.js","Components/WeatherPanel/NoWeatherData.js","Components/WeatherPanel/WeatherIcon.js","Components/WeatherPanel/CurrentWeather.js","Components/WeatherForecast/ForecastWeatherCard.js","Components/WeatherForecast/ForecastWeatherCards.js","Components/WeatherForecast/ForecastWeather.js","Components/Maps/Map.js","Components/WeatherPanel/WeatherPanel.js","WeatherApp.js","App.js","serviceWorker.js","index.js"],"names":["NavSearch","state","search","handleSearchChange","e","setState","target","value","handleNavSearchClick","preventDefault","props","onNavSearchClick","className","type","onChange","this","placeholder","required","onClick","src","React","Component","NavDefaultSearchesCity","handleDefaultCityClick","onDefaultCityClick","city","NavDefaultSearches","cities","map","SidebarNav","HamburgerMenu","handleHamburgerIconClick","onHamburgerIconClick","icon","faBars","faExclamationTriangle","Navigation","displayNav","NoWeatherData","WeatherIcon","getIconClassName","iconCode","iconCodeCopy","getTimeOfDayClass","timeOfDayCode","pop","weatherCodeString","join","getDayWeatherClass","getNightWeatherClass","weatherCode","weatherClass","console","log","parent","description","CurrentWeather","convertToCelcius","temp","toFixed","convertToFahrenheit","calculateHeatIndex","f","rh","Math","pow","convertToHumanReadableDateTime","dateTime","date","getDate","month","humanReadableMonth","time","humanReadableTime","getMonth","getHours","humanReadableMinutes","getMinutes","toString","length","getbackgroundColorClass","code","currentDateTime","Date","WeatherData","dt","sys","sunrise","sunset","weather","name","main","humidity","ForecastWeatherCard","day","low","high","rain","faTintSlash","faTint","ForecastWeatherCards","today","getDay","getDayTitle","getDayName","forecastWeatherCards","dailyForecasts","forecast","getHigh","getLow","getRainProb","getWeatherIcon","ForecastWeather","getTonightsForecast","getTomorrowsForecast","createForecastObjects","allForecasts","todaysDate","forecastObjects","initializeDatesForForecast","list","forEach","index","addTemperature","addIcon","addRain","i","push","daysWeatherForecasts","setDate","ForecastData","currentWeather","Fragment","wind","forecasts","RainHistory","Humidity","WindSpeed","direction","angle","degrees","parseFloat","threeHourly","deg","faArrowAltCircleUp","speed","temperatures","icons","item","mf","m","j","max","min","ThreeHourlyForecastPanel","slice","threeHourlyForecast","ThreeHourlyForecast","Map","center","lat","lng","zoom","bootstrapURLKeys","key","defaultCenter","defaultZoom","WeatherPanel","handleOutsideNavClick","onOutsideNavClick","getDisplayClass","navOut","currentWeatherData","dimmed","forecastWeatherData","coord","lon","GitHub","href","WeatherApp","componentWillMount","mobile","window","matchMedia","matches","navigator","geolocation","getCurrentPosition","geolocationSuccess","geolocationFailure","pos","coords","latitude","longitude","geolocationDataFetch","err","a","async","currentUrl","forecastUrl","fetch","currentResponse","forecastResponse","json","daysWeather","weeksWeather","handleWeatherDataUpdate","fetchDaysWeather","location","getUrl","response","fetchWeeksWeather","searchTerm","newLocation","countryCode","handleSearch","currentData","weeksData","current","weeks","Object","assign","searchLocation","nextDisplay","apiKey","library","add","fab","faCheckSquare","faCoffee","App","Boolean","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.62d704ad.chunk.js","sourcesContent":["import React from 'react';\n\nclass NavSearch extends React.Component {\n\n    state = {\n        search: '',\n    }\n\n    handleSearchChange = (e) => {\n        this.setState({search: e.target.value});\n\n        \n    }\n\n    handleNavSearchClick = (e) => {\n        e.preventDefault();\n\n        this.props.onNavSearchClick(this.state.search);\n    }\n\n    render(){\n        return (\n            <div className='sidebar-nav-item-large search-container'>\n                <div className='sidebar-nav-search'>\n                    <form className='sidebar-nav-search-form'>\n                        <input type='text' onChange={this.handleSearchChange} placeholder='Enter Location' required className='search-box'>\n                        \n                        </input>\n                        <button className = 'search-button' onClick={this.handleNavSearchClick}>\n                            <img src='./search.svg' className='search-icon'></img>\n                        </button>\n                    </form>\n                </div>\n                <div className='sidebar-nav-currentlocation'>\n                    \n                </div>\n                \n            </div>\n        )\n    }\n}\n\nexport default NavSearch;","import React from 'react';\n\nclass NavDefaultSearchesCity extends React.Component {\n\n    handleDefaultCityClick = () => {\n        this.props.onDefaultCityClick(this.props.city);\n    }\n\n    render(){\n        return (\n            <div className='sidebar-nav-item-small'>\n                <div className='nav-default-search-city' onClick={this.handleDefaultCityClick}>\n                    <div><span className='default-city-name'>{this.props.city}</span><span className='default-city-arrow'>&#8827;</span></div>\n                    \n\n                    \n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default NavDefaultSearchesCity;","import React from 'react';\nimport NavDefaultSearchesCity from './NavDefaultSearchesCity';\n\nclass NavDefaultSearches extends React.Component {\n\n    constructor (props){\n        super(props);\n\n        this.state = {\n            cities: ['Brisbane', 'Melbourne', 'Sydney', 'Adelaide', 'Hobart', 'Darwin', 'Perth']\n        }\n    }\n\n    render(){\n\n        const defaultSearches = this.state.cities.map((city) => (\n            <NavDefaultSearchesCity city={city} onDefaultCityClick={this.props.onDefaultCityClick}/>\n        ));\n\n        return (\n            defaultSearches\n        )\n    }\n}\n\nexport default NavDefaultSearches;","import React from 'react';\nimport NavSearch from './NavSearch';\nimport NavDefaultSearches from './NavDefaultSearches';\n\nclass SidebarNav extends React.Component {\n\n    render(){\n        return (\n            <nav className='sidebar-nav'>\n                <div className='sidebar-nav-item-large'>\n                    <div className='sidebar-nav-header'>\n                        <p>BOM Weather</p>\n                        <p className='bold'>Bureau of Meteorology</p>\n                    </div>\n                </div>\n                <NavSearch onNavSearchClick={this.props.onNavSearchClick}/>\n                <NavDefaultSearches onDefaultCityClick={this.props.onDefaultCityClick}/>\n            </nav>\n        )\n    }\n}\n\nexport default SidebarNav;","import React from 'react';\nimport './navigation.css';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faBars} from '@fortawesome/free-solid-svg-icons';\nimport {faExclamationTriangle} from '@fortawesome/free-solid-svg-icons';\n\nclass HamburgerMenu extends React.Component {\n\n    handleHamburgerIconClick = (e) => {\n\n        this.props.onHamburgerIconClick();\n    }\n    render(){\n        return (\n            <div className='hamburger-menu'>\n                <div className='hamburger-menu-icon' onClick={this.handleHamburgerIconClick}>\n                    <FontAwesomeIcon icon={faBars}/>\n                    {/* <img src='./hamburger-menu.png' className='hamburger-menu-icon-image' alt='menu icon' onClick={this.handleHamburgerIconClick}/> */}\n                </div>\n                <div className='hamburger-menu-radar'>\n                    <p>Radar</p>\n                </div>\n                <div className='hamburger-menu-warnings'>\n                    <FontAwesomeIcon icon={faExclamationTriangle} />\n                    {/* <img src='./warning.png' className='hamburger-menu-warnings-image' alt='warning icon' /> */}\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default HamburgerMenu;","import React from 'react';\nimport SidebarNav from './SidebarNav';\nimport HamburgerMenu from './HamburgerMenu';\nimport Media from 'react-media';\nimport './navigation.css'\n\n\nclass Navigation extends React.Component {\n\n    \n\n    render(){\n\n        // const isMobile = useMediaQuery({query : '(max-width: 600px)'});\n\n        // console.log(isMobile);\n        if(this.props.displayNav){\n            return (\n            \n                <SidebarNav displayNav={this.props.displayNav} onNavSearchClick={this.props.onNavSearchClick} onDefaultCityClick={this.props.onDefaultCityClick} />\n                \n            ) \n        } else {\n            return (\n                null\n            )\n        }\n        \n    }\n}\n\nexport default Navigation;","import React from 'react';\n\nclass NoWeatherData extends React.Component {\n\n    render(){\n        return(\n            <main className='weatherpanel-container'>\n                <div className='weatherpanel-current-container'>\n\n                </div>\n                <div className='forecast-container'>\n\n                </div>\n            </main>\n        )\n    }\n}\n\nexport default NoWeatherData;","import React from 'react';\n\nimport '../../WeatherIcons/weather-icons.css';\n\nclass WeatherIcon extends React.Component {\n\n    getIconClassName = (iconCode) => {\n\n        // console.log(iconCode);\n        \n        const iconCodeCopy = [...iconCode];\n\n        return this.getTimeOfDayClass(iconCodeCopy);\n\n    };\n\n    getTimeOfDayClass = (iconCode) => {\n\n        // console.log(iconCode)\n        \n        const timeOfDayCode = iconCode.pop();\n\n        const weatherCodeString = iconCode.join(\"\");\n\n        if(timeOfDayCode[0] === 'd') {\n            return this.getDayWeatherClass(weatherCodeString);\n        } else {\n            return this.getNightWeatherClass(weatherCodeString);\n        }\n    }   \n\n    getDayWeatherClass = (weatherCode) => {\n\n        const timeOfDayClass = 'day';\n\n        let weatherClass = '';\n\n        if (weatherCode === '01'){\n            weatherClass = 'sunny';\n        } else if(weatherCode === '02' || weatherCode === '03' || weatherCode === '04'){\n            weatherClass = 'cloudy';\n        } else if (weatherCode === '09'){\n            weatherClass = 'rain-mix'\n        } else if (weatherCode === '10'){\n            weatherClass = 'rain'\n        } else if (weatherCode === '11'){\n            weatherClass = 'thunderstorm'\n        } else if (weatherCode === '13'){\n            weatherClass = 'snow-wind'\n        } else {\n            weatherClass = 'fog';\n        }\n\n        return `wi-${timeOfDayClass}-${weatherClass}`;\n    }\n\n    getNightWeatherClass = (weatherCode) => {\n        const timeOfDayClass = 'night';\n\n        let weatherClass = '';\n\n        if (weatherCode === '01'){\n            weatherClass = 'clear';\n        } else if(weatherCode === '02' || weatherCode === '03' || weatherCode === '04'){\n            weatherClass = 'alt-cloudy';\n        } else if (weatherCode === '09'){\n            weatherClass = 'alt-showers'\n        } else if (weatherCode === '10'){\n            weatherClass = 'rain'\n        } else if (weatherCode === '11'){\n            weatherClass = 'alt-thunderstorm'\n        } else if (weatherCode === '13'){\n            weatherClass = 'alt-snow'\n        } else {\n            weatherClass = 'fog';\n        }\n\n        return `wi-${timeOfDayClass}-${weatherClass}`;\n    }\n    \n\n    render(){\n\n        console.log(this.props.parent)\n\n        if(this.props.parent){\n            return (\n                <i className={`wi ${this.getIconClassName(this.props.icon)}`}></i>\n            )\n        } else {\n            return (\n                <div className='weatherpanel-current-location-icon' \n                // style={{backgroundImage: this.createImageUrl()}}\n                >\n                    <i className={`wi ${this.getIconClassName(this.props.icon)}`}></i>\n                    <p>{this.props.description}</p>\n                </div>\n            )\n        }\n    }\n}\n\nexport default WeatherIcon;","import React from 'react';\nimport WeatherIcon from './WeatherIcon';\n\nclass CurrentWeather extends React.Component {\n\n    // accepts kelvins, returns celcius\n    convertToCelcius = (temp) => {\n        return (temp - 273.15).toFixed(1);\n    }\n\n    // accepts kelvins, return farhnheit\n    convertToFahrenheit = (temp) => {\n        return (temp - 273.15) * 9/5 + 32;\n    }\n    // accepts fahrenheit, and a relative humidity, returns a 'feels like' temp\n    calculateHeatIndex = (f, rh) => {\n\n        return (\n            (((-42.379 + (2.04901523 * f) + (10.14333127 * rh)\n            - (0.22475541 * f * rh) - (6.83783 * Math.pow(10, -3) * Math.pow(f, 2))\n            - (5.481717 * Math.pow(10, -2) * Math.pow(rh, 2)) + (1.22874 * Math.pow(10, -3) * Math.pow(f, 2) * rh)\n            + (8.5282 * Math.pow(10, -4) * f * Math.pow(rh, 2)) - (1.99 * Math.pow(10, -6) * Math.pow(f, 2) * Math.pow(rh, 2)))\n            // converting the above farhenheit temp, to celcius\n            -32) * 5/9).toFixed(1)\n        );\n    }\n\n    convertToHumanReadableDateTime = (dateTime) => {\n        const date = dateTime.getDate();\n\n        const month = this.humanReadableMonth(dateTime);\n\n        const time = this.humanReadableTime(dateTime);\n\n        return `${time}, ${date} ${month}`;\n    }\n\n    humanReadableMonth = (dateTime) => {\n\n        const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\n        const month = dateTime.getMonth();\n\n        return months[month];\n    };\n    // if .getMinutes() is < 10, it returns say 8 instead of 08\n    humanReadableTime = (dateTime) => {\n        \n        return `${dateTime.getHours()}:${this.humanReadableMinutes(dateTime)}`;\n    };\n\n    humanReadableMinutes = (dateTime) => {\n        \n        return dateTime.getMinutes().toString().length > 1 ? dateTime.getMinutes() : '0'+dateTime.getMinutes();\n    };\n\n    getbackgroundColorClass = (code) => {\n\n        const newCode = [...code];\n        const timeOfDayCode = newCode.pop();\n\n        return timeOfDayCode === 'd' ? 'day' : 'night';\n    };\n\n    render(){\n\n        const currentDateTime = new Date(this.props.WeatherData.dt * 1000);\n\n        const sunrise = new Date(this.props.WeatherData.sys.sunrise * 1000);\n\n        const sunset = new Date(this.props.WeatherData.sys.sunset * 1000);\n\n        console.log(currentDateTime);\n        return(\n            \n            <div className={`weatherpanel-current-container ${this.getbackgroundColorClass(this.props.WeatherData.weather[0].icon)}`}>\n                <div className='weatherpanel-current-location'>\n                    <div className='weatherpanel-current-location-name'>\n                        <div>\n                            <p>\n                            {this.props.WeatherData.name}\n                            </p>\n                        </div>\n                    </div>\n                    {/* <div className='weatherpanel-current-location-icon'>\n                        \n                    </div> */}\n                    <WeatherIcon icon={this.props.WeatherData.weather[0].icon} description={this.props.WeatherData.weather[0].description} />\n                </div>\n                <div className='weatherpanel-current-temp'>\n                    <div>\n                        \n                    </div>\n                    <div className='weatherpanel-current-temp-reading'>\n                        <div>\n                            <p className='weatherpanel-current-temp-reading-degrees'>\n                            {this.convertToCelcius(this.props.WeatherData.main.temp) + '\\u00b0'} \n                            </p>\n                            <p className='weatherpanel-current-temp-reading-feels'>\n                                Feels Like {this.calculateHeatIndex(this.convertToFahrenheit(this.props.WeatherData.main.temp), this.props.WeatherData.main.humidity) + '\\u00b0'}\n                            </p>\n                            <p className='weatherpanel-current-temp-reading-feels'>\n                                {this.convertToHumanReadableDateTime(currentDateTime)}\n                            </p>\n                            \n                        </div>\n                    </div>\n                    \n                    \n                </div>\n            </div>\n        )\n    }\n}\n\nexport default CurrentWeather;","import React from 'react';\nimport WeatherIcon from '../WeatherPanel/WeatherIcon';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faTintSlash} from '@fortawesome/free-solid-svg-icons';\nimport {faTint} from '@fortawesome/free-solid-svg-icons';\n\nclass ForecastWeatherCard extends React.Component {\n\n    convertToCelcius = (temp) => {\n        return (temp - 273.15).toFixed(1);\n    }\n\n    render(){\n        return (\n            <div className='forecast-container-card'>\n                <div className='forecast-container-card-date'>\n                    <p>{this.props.day}</p>\n                </div>\n                <div className='forecast-container-card-icon'>\n                    <p>\n                        <WeatherIcon icon={this.props.icon} parent={'Card'}/>\n                        {/* &#9788;  */}\n                    </p>\n                    \n                </div>\n                <div className='forecast-container-card-temp'>\n                    <span>\n                        {this.convertToCelcius(this.props.low) + '\\u00b0'}\n                    </span>\n                    <span>\n                        {this.convertToCelcius(this.props.high) + '\\u00b0'}\n                    </span>\n                </div>\n                <div className='forecast-container-card-rain'>\n                    <p>\n                        <span className='rain-icon'> {this.props.rain === 0 ? <FontAwesomeIcon icon={faTintSlash} /> : <FontAwesomeIcon icon={faTint}/>} </span>\n                        {this.props.rain} % \n                     </p>\n                </div>\n\n\n            </div>\n        )\n    }\n}\n\nexport default ForecastWeatherCard;","import React from 'react'\nimport ForecastWeatherCard from './ForecastWeatherCard'\n\nclass ForecastWeatherCards extends React.Component {\n\n    state = {\n        today: new Date().getDay(),\n    }\n\n    getDayTitle = (day) => {\n        if(day.getDay() === this.state.today){\n            return 'Today';\n        } else if (this.state.today - day.getDay() === -1){\n            return 'Tomorrow';\n        } else {\n            return this.getDayName(day);\n        }\n    }\n\n    getDayName = (day) => {\n        const days = ['Sunday','Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n\n        return days[day.getDay()];\n    }\n\n    render(){\n\n        const forecastWeatherCards = this.props.dailyForecasts.map((forecast) => (\n            <ForecastWeatherCard \n                day={this.getDayTitle(forecast.day)}\n                high={forecast.getHigh()}\n                low={forecast.getLow()}\n                rain={forecast.getRainProb().toFixed(1)}\n                icon={forecast.getWeatherIcon()}\n            />\n        ))\n\n        return (\n            <div className='forecast-container-cards'>\n                {forecastWeatherCards}\n            </div>\n        )\n    }\n}\n\nexport default ForecastWeatherCards;","import React from 'react';\nimport ForecastWeatherCards from './ForecastWeatherCards';\nimport './ForecastWeather.css'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faArrowAltCircleUp} from '@fortawesome/free-solid-svg-icons';\nimport {faTint} from '@fortawesome/free-solid-svg-icons';\n\n// this is on the git branch, geolocation\n\nclass ForecastWeather extends React.Component {\n\n    getTonightsForecast = () => {\n\n    };\n\n    getTomorrowsForecast = () => {\n\n    };\n\n    convertToCelcius = (temp) => {\n        return (temp - 273.15).toFixed(1);\n    }\n\n    createForecastObjects = (allForecasts) => {\n\n        const today = new Date();\n\n        // console.log(today);\n\n        // console.log(allForecasts);\n\n        const todaysDate = today.getDate();\n\n        const forecastObjects = this.initializeDatesForForecast(today);\n\n        allForecasts.list.forEach((forecast) => {\n            let currentForecastsDate = new Date(forecast.dt * 1000);\n            // console.log(currentForecastsDate.getDate() - todaysDate);\n            let index = currentForecastsDate.getDate() - todaysDate;\n\n            // f\n            forecastObjects[index].addTemperature(forecast.main.temp);\n\n            forecastObjects[index].addIcon(forecast.weather[0].icon);\n            \n\n            if(forecast.rain){\n                console.log(forecast.rain[\"3h\"]);\n                forecastObjects[index].addRain(forecast.rain[\"3h\"]);\n            }\n\n        })\n\n        return forecastObjects;\n\n\n    }\n\n    initializeDatesForForecast = (today) => {\n\n        const forecastObjects = []\n        for(let i = 0; i < 6; i++){\n            forecastObjects.push(new daysWeatherForecasts(new Date (new Date().setDate(today.getDate() + i))));\n        }\n\n        return forecastObjects;\n    }\n\n    render(){\n\n        // console.log(this.props.ForecastData)\n        \n        const dailyForecasts=this.createForecastObjects(this.props.ForecastData);\n\n        const currentWeather = this.props.ForecastData.list[0];\n\n        // console.log(currentWeather);\n\n\n        return (\n            // this should be an entirely new component, which as props will recieve tonights low, and tomorrows high\n            <React.Fragment>\n\n            \n            <div className='forecast-container'>\n                <div className='forecast-container-first'>\n                    <div className='tonight-tomorrow'>\n                        <div className='tonight'>\n                            <p className='degrees'>{this.convertToCelcius(dailyForecasts[0].getLow())} {'\\u00b0'}</p>\n                            <p className='alt-color'>Tonight</p>\n                        </div>\n                        <div className='tomorrow'>\n                            <p className='degrees alt-color'>\n                                {this.convertToCelcius(dailyForecasts[1].getHigh())}{'\\u00b0'}\n                            </p>\n                            <p className='alt-color'>\n                                Tomorrow\n                            </p>\n                        </div>\n                    </div>\n                    <div className= 'current-weather-extras'>\n                        <div className='current-weather-extras-content'>\n                            <WindSpeed wind={currentWeather.wind}/>\n                            {/* <p>8-- CALM 0 <span className='alt-color'>km/h</span></p> */}\n                            <Humidity humidity={currentWeather.main.humidity}/>\n                            {/* <p>8-- 88% <span className='alt-color'>humidity </span></p> */}\n                            <RainHistory rain={currentWeather.rain ? currentWeather.rain[\"3h\"] : 0} dateTime={currentWeather.dt} />\n                            {/* // <p>&#128167; 0.2mm <span className='alt-color'>since 9 am</span></p> */}\n                        </div>\n                    </div>\n                </div>\n                <div className='forecast-container-second'>\n                    {/*\n                         this will recieve an array of objects, each object will be a date, spanning up to five days in the future,\n                        each day will have a day and night time temperature, and a probability of rain, likely, a completely made up one.\n                    */}\n                    <ForecastWeatherCards dailyForecasts={dailyForecasts}/>\n                </div>\n                <ThreeHourlyForecastPanel forecasts={this.props.ForecastData}/>\n                \n            </div>\n            \n            </React.Fragment>\n        )\n    }\n};\n\nconst RainHistory = (props) => {\n\n    const getForecastTime = (datetime) => {\n\n    }\n\n    return (\n        // This needs to return the amount of rain over the last 3 hours. Need to recieve the DT of the forecast to\n        // be able to display X amount of mms since X time\n        <p>&#128167; {props.rain.toFixed(1)}mm <span className='alt-color'>since 9 am</span></p>\n    )\n}\n\nconst Humidity = (props) => {\n\n    return (\n    <p><FontAwesomeIcon icon={faTint}/> {props.humidity}% <span className='alt-color'>humidity </span></p>\n    )\n}\n\nconst WindSpeed = (props) => {\n\n    const direction = (angle) => {\n\n        const degrees = parseFloat(angle);\n        let direction = '';\n        if(degrees >= 0 && degrees < 30){\n            direction = 'N';\n        } else if (degrees >= 30 && degrees < 60){\n            direction = 'NE';\n        } else if (degrees >= 60 && degrees < 120){\n            direction ='E';\n        } else if (degrees >= 120 && degrees < 150){\n            direction = 'SE';\n        } else if (degrees >= 150 && degrees < 210){\n            direction ='S'\n        } else if (degrees >= 210 && degrees < 240){\n            direction = 'SW'\n        } else if (degrees >= 240 && degrees < 300){\n            direction ='W';\n        } else if (degrees >= 300 && degrees < 330){\n            direction = 'NW';\n        } else {\n            direction = 'N';\n        };\n        // console.log(degrees)\n        // console.log(direction)\n        return direction;\n    }\n    if(props.threeHourly){\n        return (\n            <React.Fragment>\n                <p>{direction(props.wind.deg)}</p>\n                <p><span className={direction(props.wind.deg)}><FontAwesomeIcon icon={faArrowAltCircleUp}/></span></p>\n                <p>{(props.wind.speed * 3.6).toFixed(0)} km/h</p>\n            </React.Fragment>\n            \n        )\n    } else {\n    return (\n        // for the directed arrow, a FontAwesomeIcon will be used, it will be within a span that will have one of 8 classes on it for the 8 rotates.\n        // props.wind.speed * 3.6, we want km/h, default measurement is metres/second 60*60/1000 is 3.6\n        <p><span className={direction(props.wind.deg)}><FontAwesomeIcon icon={faArrowAltCircleUp}/></span> \n            <span className='alt-color'> {direction(props.wind.deg)} {(props.wind.speed * 3.6).toFixed(1)} KM/H</span></p>\n    )}\n};\n\n// when this class is created, if it is late in the day. this.temperatures becomes an empty array. wtf? this leads to an infinity bug\n\nclass daysWeatherForecasts {\n\n    constructor(day){\n        \n        this.day = day;\n        this.temperatures = [];\n        this.rain = [];\n        this.icons = [];\n    }\n\n    addTemperature = (temp) => {\n        this.temperatures.push(temp);\n    }\n\n    addRain = (rain) => {\n        this.rain.push(rain);\n    }\n\n    addIcon = (icon) => {\n        this.icons.push(icon);\n        // console.log(`adding icon ${icon}`)\n    }\n\n    getWeatherIcon = () => {\n        // stores the amount of times, the most commonly occuring item occurs,\n        let mf = 1;\n        // keeps count of the occurances of the item at index i.\n        let m = 0;\n        // when m > mf, this value will store the icon code;\n        let item;\n\n        for(let i = 0; i < this.icons.length; i++){\n\n            for(let j = i; j < this.icons.length; j++){\n                if(this.icons[i] === this.icons[j]){\n                    m++\n                }\n                if (m > mf){\n                    mf = m;\n                    item = this.icons[i];\n                }\n            }\n            m = 0;\n        }\n\n        return item ? item : '01d';\n\n        \n\n        \n    }\n\n    getHigh = () => {\n        // console.log(this.temperatures)\n        // console.log(Math.max(...this.temperatures))\n        return Math.max(...this.temperatures);\n    };\n\n    getLow = () => {\n        // console.log(this.temperatures.length)\n        // console.log(...this.temperatures)\n        // console.log(Math.min(...this.temperatures))\n        return Math.min(...this.temperatures);\n    }\n\n    getRainProb = () => {\n        if(this.rain.length === 0){\n            return 0;\n        } else {\n            let max = 0;\n            this.rain.forEach(value => {if(value > max){max = value}});\n\n            console.log('total prob of rain: ' + max);\n            console.log('rain entries: ' + this.rain.length);\n\n            return max * 100;\n        }\n    }\n\n};\n\nconst ThreeHourlyForecastPanel = (props) => {\n\n    console.log(props.forecasts.list.slice(0, 8))\n\n    const forecasts = props.forecasts.list.slice(0,8);\n\n    console.log(forecasts)\n\n    const threeHourlyForecast = forecasts.map(forecast => (\n        <ThreeHourlyForecast forecast={forecast}/>\n    ))\n    // a function is ran here, that grabs the 8 readings that will be displayed\n    return(\n        <div className='forecast-container-third'>\n            <div className='forecast-container-third-title'><p>Weather for the next 24 hours</p></div>\n            <div className='forecast-container-third-readings'>\n                {threeHourlyForecast}\n            </div>\n        </div>\n    )\n};\n\nconst ThreeHourlyForecast = (props) => {\n    // recieves a forecast, returns what will be displayed in the scrollable 24 hour forecast.0\n\n    const convertToCelcius = (temp) => {\n        return (temp - 273.15).toFixed(1);\n    }\n\n    const humanReadableTime = (dateTime) => {\n        \n        return `${dateTime.getHours()}:${humanReadableMinutes(dateTime)}`;\n    };\n\n    const humanReadableMinutes = (dateTime) => {\n        \n        return dateTime.getMinutes().toString().length > 1 ? dateTime.getMinutes() : '0'+dateTime.getMinutes();\n    };\n\n    const dateTime = new Date(props.forecast.dt * 1000);\n\n    console.log(dateTime);\n\n    return (\n        <div className='forecast-container-third-reading'>\n            <div className='heading'>\n                <p>{humanReadableTime(dateTime)}</p>\n            </div>\n            <div className='temp'>\n                <p>{convertToCelcius(props.forecast.main.temp)} {'\\u00b0'} C</p>\n                \n            </div>\n            <div className='wind'>\n                <WindSpeed wind={props.forecast.wind} threeHourly={true}/>\n            </div>\n            <div>\n\n            </div>\n        </div>\n    )\n}\n\nexport default ForecastWeather;","import React from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport './Map.css'\n\n\nclass Map extends React.Component {\n\n    state = {\n        center: {\n            lat: 59.95,\n            lng: 30.33,\n        },\n        zoom: 11,\n    };\n\n    render(){\n        return (\n            <section className='map-container'>\n                <div className='map-container-header'>\n                    <p>Brisbane (Mt Stapylton) Radar</p>\n                </div>\n                <div className='map-container-content'>\n                    <GoogleMapReact\n                        bootstrapURLKeys={{key: 'AIzaSyDaqXDtwm3M51qPezZ-Ydq_CXpo8PHYV8o'}}\n                        defaultCenter={{lat: this.props.lat, lng: this.props.lng}}\n                        defaultZoom={this.state.zoom}\n                    />\n                </div>\n            </section>\n        )\n    }\n}\n\nexport default Map;","import React from 'react';\nimport NoWeatherData from './NoWeatherData';\nimport CurrentWeather from './CurrentWeather';\nimport ForecastWeather from '../WeatherForecast/ForecastWeather'\nimport Map from '../Maps/Map';\nimport './WeatherPanel.css';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\n\n\n\nclass WeatherPanel extends React.Component {\n\n    handleOutsideNavClick = (e) => {\n        this.props.onOutsideNavClick();\n    }\n\n    getDisplayClass = (navOut) => {\n        if(navOut){\n            return 'dimmed';\n        } else {\n            return \"\";\n        }\n    }\n\n    render(){\n        console.log(this.props);\n        if(this.props.currentWeatherData){\n            return(\n                <main className={`weatherpanel-container ${this.getDisplayClass(this.props.dimmed)}`} onClick={this.handleOutsideNavClick}>\n                    <CurrentWeather WeatherData={this.props.currentWeatherData}/>\n                    <ForecastWeather ForecastData={this.props.forecastWeatherData}/>\n                    <Map lat={this.props.currentWeatherData.coord.lat} lng={this.props.currentWeatherData.coord.lon}/>\n                    <GitHub />\n                </main>\n            )\n        } else {\n            return (\n                <NoWeatherData />\n            )\n        }\n        \n    }\n};\n\nconst GitHub = () => {\n\n    return (\n        <div className='github-container'>\n            <div className='github-container-content'>\n                <a href='https://github.com/clinnygee/weather-api-app-BOM'><p><FontAwesomeIcon icon={['fab', 'github']}/></p></a>                \n                <p>Check out the source on GitHub!</p>\n            </div>            \n        </div>\n    )\n}\n\nexport default WeatherPanel;","import React from 'react';\nimport Navigation from './Components/Navigation/Navigation';\nimport WeatherPanel from './Components/WeatherPanel/WeatherPanel';\nimport HamburgerMenu from '../src/Components/Navigation/HamburgerMenu'\nimport Map from './Components/Maps/Map';\nimport Media from 'react-media';\n\n\nclass WeatherApp extends React.Component {\n\n\n    constructor (){\n\n        super();\n\n        this.state = {\n            countryCode: ',au',\n            location: 'Morayfield,au',\n            currentWeatherData: null,\n            forecastWeatherData: null,\n            displayNav: true,\n            geolocation: null,\n            apiKey: '2e8a17c6cc6b9d1b81c7ec3d9dc36412'\n        }\n    };\n\n    componentWillMount = () => {\n        // this.fetchDaysWeather(this.state.location).then(data => {\n        //     this.setState({currentWeatherData: data});\n        // })\n\n        // this.fetchWeeksWeather(this.state.location).then(weeksData => {\n        //     this.setState({forecastWeatherData: weeksData});\n        // })\n        const mobile = window.matchMedia('(max-width: 600px)');\n\n        console.log(mobile.matches);\n        if(mobile.matches){\n            this.setState({displayNav: false});\n        };\n\n        navigator.geolocation.getCurrentPosition(this.geolocationSuccess, this.geolocationFailure);\n    };\n\n    geolocationSuccess = (pos) => {\n\n        console.log(pos);\n\n        const geolocation = pos.coords;\n\n        console.log(geolocation.latitude.toFixed(0));\n\n        this.setState({geolocation: {lat: geolocation.latitude.toFixed(5), lon: geolocation.longitude.toFixed(5)}}, () => {this.geolocationDataFetch()});\n\n        \n\n    };\n\n    geolocationFailure = (err) => {\n        console.log(err);\n    };\n\n    geolocationDataFetch = async () => {\n\n        const lat = this.state.geolocation.lat;\n        const lon= this.state.geolocation.lon;\n\n        const currentUrl = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&APPID=9fe564bca63752159bb51775d9a2e5b0`;\n        const forecastUrl = `https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&APPID=9fe564bca63752159bb51775d9a2e5b0`;\n\n        const currentResponse = await fetch(currentUrl);\n        const forecastResponse = await fetch(forecastUrl);\n\n        const daysWeather = await currentResponse.json();\n        const weeksWeather = await forecastResponse.json();\n\n        this.handleWeatherDataUpdate(daysWeather, weeksWeather);\n    }\n\n    fetchDaysWeather = async (location) => {\n\n        const getUrl = `https://api.openweathermap.org/data/2.5/weather?q=${location}&APPID=2e8a17c6cc6b9d1b81c7ec3d9dc36412`;\n\n        // https://api.openweathermap.org/data/2.5/weather?q=$Morayfield,Au&APPID=2e8a17c6cc6b9d1b81c7ec3d9dc36412\n        // https://api.openweathermap.org/data/2.5/weather?lat=-27&lon=153&APPID=2e8a17c6cc6b9d1b81c7ec3d9dc36412`\n\n        const response = await fetch(getUrl);\n\n        const daysWeather = await response.json();\n\n        return daysWeather;\n    };\n\n    fetchWeeksWeather = async (location) => {\n        const getUrl = `https://api.openweathermap.org/data/2.5/forecast?q=${location}&APPID=2e8a17c6cc6b9d1b81c7ec3d9dc36412`;\n\n        const response = await fetch(getUrl);\n\n        const weeksWeather = await response.json();\n\n        return weeksWeather;\n    };\n\n    handleNavSearchClick = (searchTerm) => {\n\n        const newLocation = `${searchTerm}${this.state.countryCode}`;\n        this.setState({location: newLocation});\n        \n        this.handleSearch(newLocation);\n    };\n\n    handleSearch = async (location) => {\n        \n        \n\n        const currentData = await this.fetchDaysWeather(location);\n\n        const weeksData = await this.fetchWeeksWeather(location);\n\n        await this.handleWeatherDataUpdate(currentData, weeksData);\n    };\n\n    handleWeatherDataUpdate = (current, weeks) => {\n\n        \n        this.setState({currentWeatherData: Object.assign({}, current), forecastWeatherData: Object.assign({}, weeks), displayNav: false});\n\n        \n    }\n\n    handleDefaultCityClick = (location) => {\n\n        const searchLocation = `${location}${this.state.countryCode}`;\n\n        this.setState({location: location});\n\n        this.handleSearch(searchLocation);\n    }\n\n    handleHamburgerIconClick = () => {\n\n        const nextDisplay = !this.state.displayNav;\n        console.log(nextDisplay);\n        this.setState({displayNav: nextDisplay});\n    }\n\n    handleOutsideNavClick = () => {\n        console.log('in handle OutsideNavClick')\n        if(this.state.displayNav){\n            this.setState({displayNav: false});\n        }\n    };\n\n    render(){\n        return (\n            \n            <div className='weatherapp-container'>\n                {/* <Media query={\"(max-width: 600px)\"}> */}\n                    <HamburgerMenu onHamburgerIconClick={this.handleHamburgerIconClick}/>\n                {/* </Media> */}\n                <Navigation onNavSearchClick={this.handleNavSearchClick} onDefaultCityClick={this.handleDefaultCityClick} displayNav={this.state.displayNav}/>\n            \n                <WeatherPanel \n                    currentWeatherData={this.state.currentWeatherData} \n                    forecastWeatherData={this.state.forecastWeatherData}\n                    onOutsideNavClick={this.handleOutsideNavClick}\n                    dimmed={this.state.displayNav}\n                    />\n                <div className='footer'>\n                    <a href='https://github.com/clinnygee/weather-api-app-BOM'><p>https://github.com/clinnygee/weather-api-app-BOM</p></a>\n                    \n                </div>\n            </div>\n        )\n    }\n}\n\nexport default WeatherApp;","import React from 'react';\n\nimport './App.css';\nimport WeatherApp from './WeatherApp';\nimport './WeatherIcons/weather-icons.css';\nimport './font/weathericons-regular-webfont.svg';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport { faCheckSquare, faCoffee } from '@fortawesome/free-solid-svg-icons'\n \nlibrary.add(fab, faCheckSquare, faCoffee)\n\nfunction App() {\n  return (\n    <WeatherApp />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}